# Generated by Django 5.0.1 on 2024-01-25 01:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorAffilation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affilation', models.CharField(max_length=255, verbose_name='Affilation')),
                ('city', models.CharField(max_length=255, verbose_name='City/Suburb/Town')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Submitter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('first_name', models.CharField(max_length=200, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=200, verbose_name='First Name')),
                ('company_or_institution', models.CharField(max_length=200, verbose_name='Company/Institution')),
                ('department', models.CharField(blank=True, max_length=200, null=True, verbose_name='Department')),
                ('phone_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Phone Number')),
                ('contact_address', models.TextField(verbose_name='Contact Address')),
                ('city', models.CharField(max_length=200, verbose_name='City')),
                ('postcode', models.CharField(blank=True, max_length=200, null=True, verbose_name='ZIP/Postcode')),
                ('country', models.CharField(max_length=200, verbose_name='country')),
                ('submitter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Title')),
                ('presentation_type', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline')], max_length=300)),
                ('is_draft', models.BooleanField(default=True, verbose_name='Draft')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Abstract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='submission_system.submission')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(verbose_name='Biography')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='submission_system.submission')),
                ('topic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='submission_system.topic')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionAuthorDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('organization', models.CharField(max_length=255, verbose_name='Last Name')),
                ('is_presenter', models.BooleanField(verbose_name='Presenter')),
                ('affilation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='submission_system.authoraffilation')),
                ('submission_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submission_system.submissiondetails')),
            ],
        ),
    ]
